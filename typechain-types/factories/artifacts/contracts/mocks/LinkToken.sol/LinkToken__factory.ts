/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  LinkToken,
  LinkTokenInterface,
} from "../../../../../artifacts/contracts/mocks/LinkToken.sol/LinkToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseApproval",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseApproval",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "transferAndCall",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600f81526020017f436861696e4c696e6b20546f6b656e00000000000000000000000000000000008152506040518060400160405280600481526020017f4c494e4b0000000000000000000000000000000000000000000000000000000081525081600390816200008f9190620004d6565b508060049081620000a19190620004d6565b505050620000b4620000ba60201b60201c565b620006d8565b620000d8336b033b2e3c9fd0803ce8000000620000da60201b60201c565b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200014c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000143906200061e565b60405180910390fd5b62000160600083836200025260201b60201c565b80600260008282546200017491906200066f565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254620001cb91906200066f565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620002329190620006bb565b60405180910390a36200024e600083836200025760201b60201c565b5050565b505050565b505050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002de57607f821691505b602082108103620002f457620002f362000296565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200035e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200031f565b6200036a86836200031f565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003b7620003b1620003ab8462000382565b6200038c565b62000382565b9050919050565b6000819050919050565b620003d38362000396565b620003eb620003e282620003be565b8484546200032c565b825550505050565b600090565b62000402620003f3565b6200040f818484620003c8565b505050565b5b8181101562000437576200042b600082620003f8565b60018101905062000415565b5050565b601f82111562000486576200045081620002fa565b6200045b846200030f565b810160208510156200046b578190505b620004836200047a856200030f565b83018262000414565b50505b505050565b600082821c905092915050565b6000620004ab600019846008026200048b565b1980831691505092915050565b6000620004c6838362000498565b9150826002028217905092915050565b620004e1826200025c565b67ffffffffffffffff811115620004fd57620004fc62000267565b5b620005098254620002c5565b620005168282856200043b565b600060209050601f8311600181146200054e576000841562000539578287015190505b620005458582620004b8565b865550620005b5565b601f1984166200055e86620002fa565b60005b82811015620005885784890151825560018201915060208501945060208101905062000561565b86831015620005a85784890151620005a4601f89168262000498565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b600062000606601f83620005bd565b91506200061382620005ce565b602082019050919050565b600060208201905081810360008301526200063981620005f7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200067c8262000382565b9150620006898362000382565b9250828201905080821115620006a457620006a362000640565b5b92915050565b620006b58162000382565b82525050565b6000602082019050620006d26000830184620006aa565b92915050565b6119b080620006e86000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063661884631161008c578063a457c2d711610066578063a457c2d714610287578063a9059cbb146102b7578063d73dd623146102e7578063dd62ed3e14610317576100ea565b8063661884631461020957806370a082311461023957806395d89b4114610269576100ea565b806323b872dd116100c857806323b872dd1461015b578063313ce5671461018b57806339509351146101a95780634000aea0146101d9576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f7610347565b6040516101049190610f50565b60405180910390f35b6101276004803603810190610122919061101a565b6103d9565b6040516101349190611075565b60405180910390f35b6101456103f7565b604051610152919061109f565b60405180910390f35b610175600480360381019061017091906110ba565b610401565b6040516101829190611075565b60405180910390f35b6101936104f9565b6040516101a09190611129565b60405180910390f35b6101c360048036038101906101be919061101a565b610502565b6040516101d09190611075565b60405180910390f35b6101f360048036038101906101ee9190611279565b6105ae565b6040516102009190611075565b60405180910390f35b610223600480360381019061021e919061101a565b610647565b6040516102309190611075565b60405180910390f35b610253600480360381019061024e91906112e8565b61065b565b604051610260919061109f565b60405180910390f35b6102716106a3565b60405161027e9190610f50565b60405180910390f35b6102a1600480360381019061029c919061101a565b610735565b6040516102ae9190611075565b60405180910390f35b6102d160048036038101906102cc919061101a565b610820565b6040516102de9190611075565b60405180910390f35b61030160048036038101906102fc919061101a565b61083e565b60405161030e9190611075565b60405180910390f35b610331600480360381019061032c9190611315565b610852565b60405161033e919061109f565b60405180910390f35b60606003805461035690611384565b80601f016020809104026020016040519081016040528092919081815260200182805461038290611384565b80156103cf5780601f106103a4576101008083540402835291602001916103cf565b820191906000526020600020905b8154815290600101906020018083116103b257829003601f168201915b5050505050905090565b60006103ed6103e66108d9565b84846108e1565b6001905092915050565b6000600254905090565b600061040e848484610961565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006104596108d9565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156104d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d090611427565b60405180910390fd5b6104ed856104e56108d9565b8584036108e1565b60019150509392505050565b60006012905090565b60006105a461050f6108d9565b84846001600061051d6108d9565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461059f9190611476565b6108e1565b6001905092915050565b60006105ba8484610820565b508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16858560405161061a9291906114ff565b60405180910390a361062b846109e1565b1561063c5761063b8484846109f4565b5b600190509392505050565b60006106538383610735565b905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546106b290611384565b80601f01602080910402602001604051908101604052809291908181526020018280546106de90611384565b801561072b5780601f106107005761010080835404028352916020019161072b565b820191906000526020600020905b81548152906001019060200180831161070e57829003601f168201915b5050505050905090565b600080600160006107446108d9565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610801576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f8906115a1565b60405180910390fd5b61081561080c6108d9565b858584036108e1565b600191505092915050565b600061083461082d6108d9565b8484610961565b6001905092915050565b600061084a8383610502565b905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b813073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610950576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094790611633565b60405180910390fd5b61095b848484610a6e565b50505050565b813073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c790611633565b60405180910390fd5b6109db848484610c37565b50505050565b600080823b905060008111915050919050565b60008390508073ffffffffffffffffffffffffffffffffffffffff1663a4c0ed363385856040518463ffffffff1660e01b8152600401610a3693929190611662565b600060405180830381600087803b158015610a5057600080fd5b505af1158015610a64573d6000803e3d6000fd5b5050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610add576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad490611712565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b43906117a4565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610c2a919061109f565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ca6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9d90611836565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0c906118c8565b60405180910390fd5b610d20838383610eb6565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610da6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9d9061195a565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e399190611476565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e9d919061109f565b60405180910390a3610eb0848484610ebb565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610efa578082015181840152602081019050610edf565b60008484015250505050565b6000601f19601f8301169050919050565b6000610f2282610ec0565b610f2c8185610ecb565b9350610f3c818560208601610edc565b610f4581610f06565b840191505092915050565b60006020820190508181036000830152610f6a8184610f17565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610fb182610f86565b9050919050565b610fc181610fa6565b8114610fcc57600080fd5b50565b600081359050610fde81610fb8565b92915050565b6000819050919050565b610ff781610fe4565b811461100257600080fd5b50565b60008135905061101481610fee565b92915050565b6000806040838503121561103157611030610f7c565b5b600061103f85828601610fcf565b925050602061105085828601611005565b9150509250929050565b60008115159050919050565b61106f8161105a565b82525050565b600060208201905061108a6000830184611066565b92915050565b61109981610fe4565b82525050565b60006020820190506110b46000830184611090565b92915050565b6000806000606084860312156110d3576110d2610f7c565b5b60006110e186828701610fcf565b93505060206110f286828701610fcf565b925050604061110386828701611005565b9150509250925092565b600060ff82169050919050565b6111238161110d565b82525050565b600060208201905061113e600083018461111a565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61118682610f06565b810181811067ffffffffffffffff821117156111a5576111a461114e565b5b80604052505050565b60006111b8610f72565b90506111c4828261117d565b919050565b600067ffffffffffffffff8211156111e4576111e361114e565b5b6111ed82610f06565b9050602081019050919050565b82818337600083830152505050565b600061121c611217846111c9565b6111ae565b90508281526020810184848401111561123857611237611149565b5b6112438482856111fa565b509392505050565b600082601f8301126112605761125f611144565b5b8135611270848260208601611209565b91505092915050565b60008060006060848603121561129257611291610f7c565b5b60006112a086828701610fcf565b93505060206112b186828701611005565b925050604084013567ffffffffffffffff8111156112d2576112d1610f81565b5b6112de8682870161124b565b9150509250925092565b6000602082840312156112fe576112fd610f7c565b5b600061130c84828501610fcf565b91505092915050565b6000806040838503121561132c5761132b610f7c565b5b600061133a85828601610fcf565b925050602061134b85828601610fcf565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061139c57607f821691505b6020821081036113af576113ae611355565b5b50919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b6000611411602883610ecb565b915061141c826113b5565b604082019050919050565b6000602082019050818103600083015261144081611404565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061148182610fe4565b915061148c83610fe4565b92508282019050808211156114a4576114a3611447565b5b92915050565b600081519050919050565b600082825260208201905092915050565b60006114d1826114aa565b6114db81856114b5565b93506114eb818560208601610edc565b6114f481610f06565b840191505092915050565b60006040820190506115146000830185611090565b818103602083015261152681846114c6565b90509392505050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b600061158b602583610ecb565b91506115968261152f565b604082019050919050565b600060208201905081810360008301526115ba8161157e565b9050919050565b7f4c696e6b546f6b656e3a207472616e736665722f617070726f766520746f207460008201527f68697320636f6e74726163742061646472657373000000000000000000000000602082015250565b600061161d603483610ecb565b9150611628826115c1565b604082019050919050565b6000602082019050818103600083015261164c81611610565b9050919050565b61165c81610fa6565b82525050565b60006060820190506116776000830186611653565b6116846020830185611090565b818103604083015261169681846114c6565b9050949350505050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006116fc602483610ecb565b9150611707826116a0565b604082019050919050565b6000602082019050818103600083015261172b816116ef565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061178e602283610ecb565b915061179982611732565b604082019050919050565b600060208201905081810360008301526117bd81611781565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611820602583610ecb565b915061182b826117c4565b604082019050919050565b6000602082019050818103600083015261184f81611813565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006118b2602383610ecb565b91506118bd82611856565b604082019050919050565b600060208201905081810360008301526118e1816118a5565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611944602683610ecb565b915061194f826118e8565b604082019050919050565b6000602082019050818103600083015261197381611937565b905091905056fea2646970667358221220e6cda68b33e7da783e04efd76d92ccd830cc7842f2f535cfcddb0d550f8fc62a64736f6c63430008130033";

type LinkTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LinkTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LinkToken__factory extends ContractFactory {
  constructor(...args: LinkTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LinkToken> {
    return super.deploy(overrides || {}) as Promise<LinkToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LinkToken {
    return super.attach(address) as LinkToken;
  }
  override connect(signer: Signer): LinkToken__factory {
    return super.connect(signer) as LinkToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LinkTokenInterface {
    return new utils.Interface(_abi) as LinkTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LinkToken {
    return new Contract(address, _abi, signerOrProvider) as LinkToken;
  }
}
